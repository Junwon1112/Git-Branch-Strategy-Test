1번 문항
-자기소개 및 입사 후 포부-

저는 기존에 다른 분야에 있었지만 좋아하는 일에 도전하고 싶었습니다. 
좋아하는 분야 중 하나가 게임이었고 한번 시도는 해보자는 생각이 들어 노트북을 들고 도서관에 가서 유니티 책을 따라해 보았습니다. 
첫번째 예제 게임으로 작은 상자를 밖으로 밀어내는 미니게임을 만들었습니다. 이 게임을 가지고 한참을 플레이 해보며 여러 기능을 추가하고 더 멋진 그래픽을
 가진 게임을 직접 만들고 싶었고 이를 계기로 클라이언트 개발을 시작하게 되었습니다.

그렇게 학원을 다니며 팀프로젝트로 만든 첫 게임에서 플레이어를 맡아 유한 상태 머신을 이용해 애니메이션들이 자연스럽게 연결되도록 만들고 
대기 상태와 전투 시 발생하는 충돌 상황을 구현했습니다. 그 외에도 파티클 시스템을 활용해 이펙트를 만들고 비동기로딩 씬을 만드는 등의 작업을 했습니다.
 이처럼 유니티 기능을 활용해 여러 기능을 구현했고 에셋을 활용해 더 멋진 그래픽을 가진 게임을 만들며 작은 한 걸음을 내딛었습니다.
 다음 걸음은 귀사에서 동료와 함께 게임을 만들며 함께하고 싶습니다.

저는 클라이언트 개발자로서 최적화 분야에 관심이 많습니다. 
최적화는 부드러운 조작감, 자연스러운 애니메이션, 화려한 그래픽을 구현해 플레이어의 몰입도를 바꾸기 때문입니다.
 몰입도가 떨어지면 유저이탈이 일어나 회사 입장에선 단기적인 수익 문제 뿐만 아니라 이후 출시작에 대해서도 거부감을 느끼게 만들어 장기적으로도 큰 손해입니다.
 그래서 최적화에 대한 관심이 많고 팀프로젝트에서 비동기 로딩을 맡아 적용하기도 했습니다.
 앞으로 메모리, 연산 최적화 등 여러 기법을 익혀 적재적소에 활용하는 개발자가 되고 싶습니다.


2번 항목
스스로 고민하여 문제를 해결한 경험

저는 개인 프로젝트를 하며 몬스터 AI를 구현하다 이동과 관련하여 막힌 적이 있었습니다. 몬스터가 지정된 포인트를 차례로 순찰하도록 구현했는데 
특정 포인트를 건너뛰고 그 다음 포인트로 이동하는 버그였습니다. 이를 해결하기 위해 3가지 시도를 해봤습니다.

이를 해결하기 위해 첫번째로 한 시도는 코드를 잘못 짰다고 가정하고 관련된 코드 전체를 검토하는 것이었습니다. 하지만 특별한 문제점을 발견하지 못했습니다. 

두번째로 한 시도는 해당 부분을 디버깅해 버그가 나는 순간을 포착하고 이유를 찾는 것이었습니다. 디버깅을 해본 결과,
 도착 후 새로운 경로의 남은 거리가 0으로 계산되어 해당 경로를 계속 건너뛴다는 것을 알았습니다. 하지만 남은 거리가 0이 되는 이유는 알 수 없었습니다.

세번째로 남은 거리가 0이 되는 이유를 알기 위해 몬스터 AI 구현에 사용한 네비게이션 기능에 대해 공부를 했고 문제는 계산 시간이었다는 것을 알았습니다.
해당 코드는 업데이트 함수에서 프레임마다 거리를 계산하고 도착 시 새로운 경로를 찾도록 구현했습니다.
그런데 길찾기 알고리즘에서 새로운 경로를 찾는 과정이 시간이 상당히 걸리는 작업이라 한 프레임 안에 계산이 안되었고 남은 거리가 0으로 남아있어
 다음 포인트로 넘어가는 것이었습니다.

저는 이 문제를 일단 남은 거리가 0이면 넘어가지 않도록 조건을 걸어 남은 거리가 0이어도 넘어가지 않도록 해결했습니다.
 하지만 이 방법은 코드를 보는 사람이 남은 거리가 0 인데 다음으로 왜 안 넘어가는지 이해하기 어렵다는 단점이 있습니다.
 그래서 다음에 구현할 때는 업데이트가 아니라 코루틴에서 넉넉한 주기를 가지고 계산하도록 만들겠습니다.
 저는 이러한 경험을 통해 여러 기능의 구현방식과 특징을 알고 사용해야 예상치 못한 문제를 해결할 수 있음을 느꼈습니다.
 이를 계기로 OS와 네트워크 등의 전산학 기초와 컴퓨터 그래픽스를 공부하게 되었습니다.

3번 항목
작성 완료!(이하 작성 완료 된 것으로 가정)
버그 수정 완료!
.
.
.
